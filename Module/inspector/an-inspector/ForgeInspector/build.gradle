apply plugin: "com.android.application"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "io.trigger.forge.android.inspector"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        compileOptions rootProject.ext.compileOptions
        manifestPlaceholders = moduleManifestPlaceholders()
    }

    flavorDimensions "default"

    productFlavors {
        vanilla {
            dimension "default"
        }
        crosswalk {
            dimension "default"
            minSdkVersion moduleMinSdkVersion() ?: 16
            ndk {
                abiFilters "armeabi-v7a", "x86"
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ["src"]
            resources.srcDirs = ["src"]
            aidl.srcDirs = ["src"]
            renderscript.srcDirs = ["src"]
            res.srcDirs = ["res"] + new File("ForgeInspector").listFiles().findAll {
                it.isDirectory() and it.name.startsWith("res_module_")
            }.collect {
                println "Added module resource directory: " + it
                it.name
            }
            assets.srcDirs = ["assets"]
        }
    }

    buildTypes {
        debug rootProject.ext.debug
        release rootProject.ext.release << {
            proguardFile getDefaultProguardFile("proguard-android.txt")
            proguardFile "proguard-project.txt"
        }
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress "xml", "png"
    }
}

dependencies {
    crosswalkImplementation "org.xwalk:xwalk_core_library:" + rootProject.ext.crosswalkVersion
    crosswalkImplementation project(path: ":ForgeModule")
    vanillaImplementation project(path: ":ForgeModule")

    implementation fileTree(dir: "libs", include: ["*.jar"], exclude: ["forgecore.jar", "guava-13.0.1.jar"])
}

repositories{
    flatDir {
        dirs "../ForgeModule/libs"
    }
}

// Force Android support library version for Crosswalk builds
configurations.all { conf ->
    if (conf.name.contains("crosswalk")) {
        println "Munging support library for: " + conf.name
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "com.android.support") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion rootProject.ext.supportLibraryVersion
                }
            }
        }
    }
}
